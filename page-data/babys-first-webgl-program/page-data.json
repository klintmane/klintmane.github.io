{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/babys-first-webgl-program/","result":{"data":{"site":{"siteMetadata":{"title":"Klint Mane"}},"markdownRemark":{"id":"6ad25c0c-8f3d-5f60-a229-e5b179e008c0","excerpt":"WebGL is a rasterization engine. Rasterization is the task of taking shapes represented as vectors and converting it into a raster image (a collection of points…","html":"<p>WebGL is a rasterization engine. Rasterization is the task of taking shapes represented as vectors and converting it into a raster image (a collection of points and lines).</p>\n<h2>Shaders</h2>\n<p>To use WebGL we provide two functions, called <em>shaders</em> which are written in a C-like language called <em>GLSL</em>:</p>\n<ol>\n<li>Vertex Shader</li>\n<li>Fragment Shader</li>\n</ol>\n<p>The two together make up a <em>shader program</em>.</p>\n<p>When rasterizing (running the program), WebGL sets up some state for these functions and runs them consecutively by calling <code class=\"language-text\">gl.drawArrays</code> or <code class=\"language-text\">gl.drawElements</code>.</p>\n<h3>1) Vertex Shader</h3>\n<p>It computes the position of vertices. Depending on what the vertex shader function returns, WebGL rasterizes points, lines or triangles.</p>\n<h3>2) Fragment Shader</h3>\n<p>It computes the color for each pixel being rasterized.</p>\n<h2>Shader Data</h2>\n<p>When WebGL sets up state for the shaders, it can be passed to the shaders in the following ways:</p>\n<ol>\n<li>Uniforms</li>\n<li>Buffers and Attributes</li>\n<li>Textures</li>\n<li>Varyings</li>\n</ol>\n<h3>1) Uniforms</h3>\n<p>They’re basically global variables which the shaders can access.</p>\n<h3>2) Buffers and Attributes</h3>\n<h4>Buffers</h4>\n<p>Arrays of binary data which are uploaded to the GPU. You can put whatever you want in them, usually things like: <em>positions, normals, texture coordinates, vertex colors</em>.</p>\n<p>Buffers are not random-access. Every time shaders are run, the buffer is sequentially read and assigned to an attribute.</p>\n<h4>Attributes</h4>\n<p>They specify how the binary data should be pulled from the buffers (the offset of each attribute, its size in bytes etc.).</p>\n<h3>3) Textures</h3>\n<p>Unlike buffers they’re random-access arrays of data which are commonly used for, but not limited to, holding image data.</p>\n<h3>4) Varyings</h3>\n<p>Values used for passing data between shaders. When a varying variable is defined on the vertex shader, its value will be interpolated on the fragment shader.</p>\n<h2>Creating a Program</h2>\n<p>When creating a WebGL program, it uses its own coordinate space, called the <em>clip space</em>. It goes from -1 to 1 on each dimension (x, y, z) and everything beyond that is clipped, hence the name.</p>\n<p>The vertex shader takes care of providing clip space coordinates for the data we want to render, while the fragment shader provides color information.</p>\n<p>Let’s write a vertex shader:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// an attribute, maps every 4 values (vec4) of the buffer to a_position</span>\nattribute vec4 a_position<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// the shader function</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// special variable the vertex shader sets</span>\n  gl_Position <span class=\"token operator\">=</span> a_position<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let’s write a fragment shader:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// fragment shaders need a precision specified, mediump = medium precision</span>\nprecision mediump <span class=\"token keyword\">float</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// special variable the vertex shader sets</span>\n  gl_FragColor <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// = RGBA(255, 0, 127, 255)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let’s create a web projects with a canvas where WebGL will render:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#c\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Gets the canvas element</span>\n  <span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Gets a WebGL context for the canvas</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>We’ll store the shaders we defined earlier into strings (since we will be using JavaScript).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> vertSrc <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">const</span> fragSrc <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">...</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>Write a function that will create a shader from the source (strings or tags) we created:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> source</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token comment\">// creates a shader</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span> <span class=\"token comment\">// attaches the source</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">compileShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span> <span class=\"token comment\">// compiles the source</span>\n\n  <span class=\"token comment\">// Error Handling</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getShaderParameter</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">COMPILE_STATUS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> shader\n  <span class=\"token punctuation\">}</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getShaderInfoLog</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">deleteShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And finally create the two shaders:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> vertShader <span class=\"token operator\">=</span> <span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">VERTEX_SHADER</span><span class=\"token punctuation\">,</span> vertSrc<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fragShader <span class=\"token operator\">=</span> <span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FRAGMENT_SHADER</span><span class=\"token punctuation\">,</span> fragSrc<span class=\"token punctuation\">)</span></code></pre></div>\n<p>We also need to write a function that will link the shaders to create a program:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">createProgram</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> vertShader<span class=\"token punctuation\">,</span> fragShader</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> program <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// creates a program</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">attachShader</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> vertShader<span class=\"token punctuation\">)</span> <span class=\"token comment\">// attaches the vertex shader</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">attachShader</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> fragShader<span class=\"token punctuation\">)</span> <span class=\"token comment\">// attaches the fragment shader</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span> <span class=\"token comment\">// links the two shaders together</span>\n\n  <span class=\"token comment\">// Error Handling</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getProgramParameter</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">LINK_STATUS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> program\n  <span class=\"token punctuation\">}</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getProgramInfoLog</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">deleteProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And create the program:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> program <span class=\"token operator\">=</span> <span class=\"token function\">createProgram</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> vertShader<span class=\"token punctuation\">,</span> fragShader<span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Initialization</h2>\n<p>After we have created the program we can initialize its environment.</p>\n<p>We can get the location of an attribute to later reference it. We can also get the buffer and save data on it.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> positionAttrLoc <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribLocation</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a_position\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// gets the attribute location</span>\n\n<span class=\"token keyword\">const</span> positionBuffer <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// creates a buffer</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> positionBuffer<span class=\"token punctuation\">)</span> <span class=\"token comment\">// binds the buffer to a bind point (ARRAY_BUFFER) so it can be referenced elsewhere</span>\n\n<span class=\"token comment\">// A triangle - three 2D points stored in a Float32Array (WebGL requires strong typing)</span>\n<span class=\"token keyword\">const</span> triangle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// copies the triangle to the buffer at the ARRAY_BUFFER bind point</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> triangle<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">STATIC_DRAW</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// STATIC_DRAW - tells WebGL the data will be static (not likely to change)</span></code></pre></div>\n<h2>Rendering</h2>\n<p>First, let’s create a function to resize the canvas. This is optional, but helps with HD-DPI displays as CSS pixels do not always map to real pixels (smartphones etc.).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> w <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>clientWidth <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>clientHeight <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">!==</span> w <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> w<span class=\"token punctuation\">)</span>\n  gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">!==</span> h <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Let’s define how WebGLs clip space relates to our canvas. On the <code class=\"language-text\">x</code> axis <code class=\"language-text\">-1 &lt;-&gt; 1</code> for us means <code class=\"language-text\">0 &lt;-&gt; canvas.width</code> and on the <code class=\"language-text\">y</code> axis <code class=\"language-text\">0 &lt;-&gt; canvas.height</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">gl<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span></code></pre></div>\n<p>And let’s also clear the canvas color:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">gl<span class=\"token punctuation\">.</span><span class=\"token function\">clearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">COLOR_BUFFER_BIT</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now we can use the program we defined on the gl context:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">gl<span class=\"token punctuation\">.</span><span class=\"token function\">useProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Next, we’ll setup the attributes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">gl<span class=\"token punctuation\">.</span><span class=\"token function\">enableVertexAttribArray</span><span class=\"token punctuation\">(</span>positionAttrLoc<span class=\"token punctuation\">)</span></code></pre></div>\n<p>And the buffer.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// bind the positionBuffer to the gl.ARRAY_BUFFER bind point</span>\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> positionBuffer<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// a_positon is vec4 [x,y,z,w], size 2 tells it to get [x,y] from the buffer and default the rest</span>\n<span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FLOAT</span> <span class=\"token comment\">// data type is Float32</span>\n<span class=\"token keyword\">const</span> normalize <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// don't normalize the data</span>\n<span class=\"token keyword\">const</span> stride <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">// 0 = no skipping bytes, we move to the next element (size * sizeof(el))</span>\n<span class=\"token keyword\">const</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">// 0 = start at first byte</span>\n\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">vertexAttribPointer</span><span class=\"token punctuation\">(</span>positionAttrLoc<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> normalize<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// positionBuffer (on ARRAY_BUFFER) was bound to the attribute, ARRAY_BUFFER is now free to be rebound</span></code></pre></div>\n<p>We can now run our program:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> primitiveType <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TRIANGLES</span> <span class=\"token comment\">// we need to draw a triangle</span>\n<span class=\"token keyword\">const</span> offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\">// start at the beginning of the triangle array</span>\n<span class=\"token keyword\">const</span> count <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token comment\">// we have 6 elements, corresponding to 3 points</span>\n\ngl<span class=\"token punctuation\">.</span><span class=\"token function\">drawArrays</span><span class=\"token punctuation\">(</span>primitiveType<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span></code></pre></div>\n<p>In our vertex shader we are using clip space coordinates, the real coordinates would be like this if the canvas was 400x300 px.</p>\n<table>\n<thead>\n<tr>\n<th>clip space</th>\n<th>screen space</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0, 0</td>\n<td>200, 150</td>\n</tr>\n<tr>\n<td>0, 0.5</td>\n<td>200, 225</td>\n</tr>\n<tr>\n<td>0.7, 0</td>\n<td>340, 150</td>\n</tr>\n</tbody>\n</table>\n<p>And in our fragment shader we are using normalized values for <code class=\"language-text\">gl_FragColor</code> which expressed in RGBA (8 bits per channel) would be:</p>\n<table>\n<thead>\n<tr>\n<th>gl_FragColor</th>\n<th>RGBA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1, 0, 0.5, 1</td>\n<td>255, 0, 127, 255</td>\n</tr>\n</tbody>\n</table>\n<p>Here’s the full example:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>canvas</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>canvas</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">function</span> <span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> source</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>\n\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">compileShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getShaderParameter</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">COMPILE_STATUS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> shader\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getShaderInfoLog</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">deleteShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">createProgram</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl<span class=\"token punctuation\">,</span> vertShader<span class=\"token punctuation\">,</span> fragShader</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> program <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">attachShader</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> vertShader<span class=\"token punctuation\">)</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">attachShader</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> fragShader<span class=\"token punctuation\">)</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getProgramParameter</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">LINK_STATUS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> program\n    <span class=\"token punctuation\">}</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token function\">getProgramInfoLog</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    gl<span class=\"token punctuation\">.</span><span class=\"token function\">deleteProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gl</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> w <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>clientWidth <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>clientHeight <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">)</span>\n\n    gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">!==</span> w <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> w<span class=\"token punctuation\">)</span>\n    gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">!==</span> h <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#c\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> gl <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webgl\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> vertSrc <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    attribute vec4 a_position; \n\n    void main() {\n      gl_Position = a_position; \n    }\n  </span><span class=\"token template-punctuation string\">`</span></span>\n\n  <span class=\"token keyword\">const</span> fragSrc <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    precision mediump float; \n\n    void main() {\n      gl_FragColor = vec4(1, 0, 0.5, 1);\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span>\n\n  <span class=\"token keyword\">const</span> vertShader <span class=\"token operator\">=</span> <span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">VERTEX_SHADER</span><span class=\"token punctuation\">,</span> vertSrc<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> fragShader <span class=\"token operator\">=</span> <span class=\"token function\">createShader</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FRAGMENT_SHADER</span><span class=\"token punctuation\">,</span> fragSrc<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> program <span class=\"token operator\">=</span> <span class=\"token function\">createProgram</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">,</span> vertShader<span class=\"token punctuation\">,</span> fragShader<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Initialization</span>\n\n  <span class=\"token keyword\">const</span> positionAttrLoc <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribLocation</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a_position\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> positionBuffer <span class=\"token operator\">=</span> gl<span class=\"token punctuation\">.</span><span class=\"token function\">createBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">bindBuffer</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> positionBuffer<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> triangle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">bufferData</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">ARRAY_BUFFER</span><span class=\"token punctuation\">,</span> triangle<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">STATIC_DRAW</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Rendering</span>\n\n  <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">clearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">COLOR_BUFFER_BIT</span><span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">useProgram</span><span class=\"token punctuation\">(</span>program<span class=\"token punctuation\">)</span>\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">enableVertexAttribArray</span><span class=\"token punctuation\">(</span>positionAttrLoc<span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">vertexAttribPointer</span><span class=\"token punctuation\">(</span>positionAttrLoc<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> gl<span class=\"token punctuation\">.</span><span class=\"token constant\">FLOAT</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n  gl<span class=\"token punctuation\">.</span><span class=\"token function\">drawArrays</span><span class=\"token punctuation\">(</span>gl<span class=\"token punctuation\">.</span><span class=\"token constant\">TRIANGLES</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"Baby's First WebGL Program","date":"June 18, 2020","description":"A quick guide on creating your first WebGL program"}}},"pageContext":{"slug":"/babys-first-webgl-program/","previous":{"fields":{"slug":"/new-beginnings/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}}